'use strict';

// tests for create
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin');
const expect = mochaPlugin.chai.expect;
let wrapped = mochaPlugin.getWrapper('create', '/handler.js', 'create');

describe('create', () => {
    it('create',()=>{
 let body = {
         title: "This is a title",
     description: "this is a des"
  }
  return wrapped.run({
    body
  }).then(result => {
      expect(result).to.not.be.empty;
      expect(result).to.be.instanceof(Object);
      expect(result).to.have.property('statusCode', 200);
      expect(result).to.have.property('body');
      expect(result.body).not.to.be.empty;
  })  
    })
})


describe('create without title', () => {
    it('create',()=>{
 let body = {
     description: "this is desc"
  }
  return wrapped.run({
    body
  }).then(result => {
      expect(result).to.not.be.empty;
      expect(result).to.be.instanceof(Object);
      expect(result).to.have.property('statusCode', 400);
  })  
    })
})


describe('create without description', () => {
    it('create',()=>{
 let body = {
    title:"this is title"
  }
  return wrapped.run({
    body
  }).then(result => {
      expect(result).to.not.be.empty;
      expect(result).to.be.instanceof(Object);
      expect(result).to.have.property('statusCode', 400);
  })  
    })
})

describe('create without body', () => {
    it('create',()=>{
 let body = {
  }
  return wrapped.run({
    body
  }).then(result => {
      expect(result).to.not.be.empty;
      expect(result).to.be.instanceof(Object);
      expect(result).to.have.property('statusCode', 400);
  })  
    })
})